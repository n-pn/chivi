@use '../essence' as *;

.cvdata {
  min-height: 50vh;
  padding: var(--verpad) var(--gutter);

  margin-left: calc(-1 * var(--gutter));
  margin-right: calc(-1 * var(--gutter));

  font-family: var(--font-serif, serif);

  @include bp-min(rem(840px)) {
    margin-left: 0;
    margin-right: 0;

    .tm-dark &,
    .tm-oled & {
      @include linesd(--bd-soft, $ndef: false, $inset: false);
    }
  }

  @include bdradi();
  @include fgcolor(secd);
  @include bgcolor(tert);
  @include shadow(1);

  .tm-warm & {
    background: #fffbeb;
  }

  .adsbygoogle {
    margin-top: 1rem;
  }

  cite {
    font-style: normal;
    font-variant: small-caps;
  }
}

.mtl._h {
  font-weight: 400;
  line-height: 1.4em;
  @include fgcolor(secd);

  @include bps(font-size, rem(23px), rem(24px), rem(26px), rem(28px));

  .cvdata._xs & {
    @include bps(font-size, rem(22px), rem(23px), rem(25px), rem(27px));
  }

  .cvdata._lg & {
    @include bps(font-size, rem(24px), rem(25px), rem(26px), rem(29px));
  }
}

.mtl._p {
  margin-bottom: 0;
  text-align: justify;
  text-justify: auto;
  line-height: 1.65em;

  @include bps(margin-top, 1em, 1.125em, 1.25em, 1.375em, 1.5em);

  .cvdata._xs & {
    @include bps(font-size, rem(16px), rem(17px), rem(18px), rem(19px));
  }

  .cvdata._sm & {
    @include bps(font-size, rem(18px), rem(19px), rem(20px), rem(21px));
  }

  .cvdata._md & {
    @include bps(font-size, rem(19px), rem(20px), rem(21px), rem(22px));
  }

  .cvdata._lg & {
    @include bps(font-size, rem(20px), rem(21px), rem(22px), rem(23px));
  }

  .cvdata._xl & {
    @include bps(font-size, rem(22px), rem(23px), rem(24px), rem(25px));
  }
}

.mtl {
  --fgcolor: #{color(gray, 8)};
  color: var(--fgcolor);

  @include bps(font-size, rem(16px), rem(17px), rem(18px));
  @include bps(line-height, 1.5rem, 1.75rem);

  & + & {
    margin-top: 1rem;
  }

  .tm-dark &,
  .tm-oled & {
    --fgcolor: #{color(gray, 3)};
  }
}

@mixin cv-token($color: blue) {
  cursor: pointer;
  position: relative;
  --border: #{color($color, 4)};
  --active: #{color($color, 6)};

  .tm-dark &,
  .tm-oled & {
    --border: #{color($color, 6)};
    --active: #{color($color, 4)};
  }

  &:hover,
  &._focus {
    color: var(--active);
    // background: var(--bg-active, inherit);
  }
}

c-v {
  --border: transparent;
  --active: var(--fgcolor);
  color: var(--fgcolor);

  background: linear-gradient(to top, var(--border) 1px, transparent 0%);
  background-position: bottom bottom;

  .mtl:hover &,
  .mtl._active & {
    // border-bottom: 1px solid var(--border);
    background: linear-gradient(to top, var(--border) 1px, transparent 0%);
  }

  .debug & {
    color: var(--active);
    background: var(--bg-active, inherit);
  }

  &[data-d='1'] {
    @include cv-token(gray);
    border: 0;
  }

  &[data-d='2'] {
    @include cv-token(blue);
    color: var(--fgmain);
    &:hover {
      color: var(--active);
    }
  }

  &[data-d='3'] {
    @include cv-token(teal);
  }

  &[data-d='4'] {
    @include cv-token(orange);
  }

  &[data-d='5'] {
    @include cv-token(red);
  }

  &[data-d='6'] {
    @include cv-token(green);
  }

  &[data-d='7'] {
    @include cv-token(fuchsia);
  }

  &[data-d='8'] {
    @include cv-token(purple);
  }

  &[data-d='9'] {
    cursor: pointer;
    position: relative;
    --active: #fff;
    --bg-active: #{color(purple, 5)};
  }

  c-z & {
    cursor: pointer;
    &:hover,
    &._active {
      color: var(--active);
    }
  }
}

@mixin cg-decor($left: '{', $right: '}') {
  &:before {
    content: $left;
  }

  &:after {
    content: $right;
  }
}

@mixin cg-color($color) {
  --color: #{color($color, 5)};

  .debug & c-v {
    // --active: var(--color);
    color: var(--color);
    &:hover {
      color: var(--active);
    }
  }
}

c-g {
  --color: var(--fgmain);

  .debug & {
    // c-v,
    &:before,
    &:after {
      color: var(--color);
    }

    @include cg-decor('{', '}');
    & {
      @include cg-decor('[', ']');
    }
    & & {
      @include cg-decor('(', ')');
    }
    & & & {
      @include cg-decor('<', '>');
    }
  }

  &[data-d='0'] {
    @include cg-decor('', '');
  }

  &[data-d='1'] {
    @include cg-color(gray);
    @include cg-decor('', '');
  }

  &[data-d='2'] {
    @include cg-color(green);
  }

  &[data-d='3'] {
    @include cg-color(blue);
  }

  &[data-d='4'] {
    @include cg-color(teal);
  }

  &[data-d='5'] {
    @include cg-color(orange);
  }

  &[data-d='6'] {
    @include cg-color(red);
  }

  &[data-d='7'] {
    @include cg-color(fuchsia);
  }

  &[data-d='8'] {
    @include cg-color(purple);
  }

  &[data-d='9'] {
    @include cg-color(pink);
  }
}

x-t,
x-p,
x-v {
  display: inline-block;
  padding: 0 0.5em;
  letter-spacing: 0.04em;
  font-weight: 500;
  @include ftsize(sm);
  @include linesd(--bd-main);
}

x-t {
  @include bdradi();
}
