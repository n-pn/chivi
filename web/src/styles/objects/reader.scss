@use '../essence' as *;

.app-fs-1 {
  // prettier-ignore
  @include bps( --head-fs, rem(21px), rem(22px), rem(23px), rem(25px), rem(27px) );
  // prettier-ignore
  @include bps( --para-fs, rem(15px), rem(16px), rem(17px), rem(18px), rem(19px) );
}

.app-fs-2 {
  // prettier-ignore
  @include bps( --head-fs, rem(22px), rem(23px), rem(24px), rem(26px), rem(28px) );
  // prettier-ignore
  @include bps( --para-fs, rem(16px), rem(17px), rem(18px), rem(19px), rem(20px) );
}

.app-fs-3 {
  // prettier-ignore
  @include bps( --head-fs, rem(23px), rem(24px), rem(25px), rem(27px), rem(29px) );
  // prettier-ignore
  @include bps( --para-fs, rem(17px), rem(18px), rem(19px), rem(20px), rem(21px) );
}

.app-fs-4 {
  // prettier-ignore
  @include bps( --head-fs, rem(23px), rem(24px), rem(26px), rem(28px), rem(30px) );

  // prettier-ignore
  @include bps( --para-fs, rem(19px), rem(20px), rem(21px), rem(22px), rem(23px) );
}

.app-fs-5 {
  // prettier-ignore
  @include bps( --head-fs, rem(24px), rem(26px), rem(28px), rem(30px), rem(32px) );

  // prettier-ignore
  @include bps( --para-fs, rem(21px), rem(22px), rem(23px), rem(24px), rem(25px) );
}

.cdata {
  display: block;

  cursor: pointer;

  color: var(--fgcolor, var(--fg-main));

  .reader._1 & {
    cursor: text;
  }

  &.focus {
    @include bdradi();
    // outline: 1px solid color(primary, 5, 5);

    .tm-light & {
      @include bgcolor(warning, 2, 2);
    }
    .tm-warm & {
      @include bgcolor(warning, 2, 2);
    }
    .tm-dark & {
      @include bgcolor(primary, 8, 2);
    }
    .tm-oled & {
      @include bgcolor(primary, 8, 2);
    }
  }
}

.reader {
  display: block;
  min-height: 40vh;

  @include fgcolor(secd);

  @include bp-min(tl) {
    margin: 0 var(--gutter);
  }

  h1,
  h2,
  p,
  ul {
    margin: 1em 0;
  }

  li {
    margin: 0.75em 0;
    font-size: var(--para-fs);
  }

  h1 {
    line-height: 1.4em;

    font-size: var(--head-fs);
  }

  p {
    text-align: justify;
    text-justify: auto;
    line-height: var(--textlh, 150%);
    font-size: var(--para-fs);
  }

  .em {
    @include fgcolor(warning, 5);
    margin-bottom: 1.5rem;
  }

  cite {
    font-style: normal;
    font-variant: small-caps;
  }
}

@mixin cv-node($color: blue) {
  cursor: pointer;
  // position: relative;

  @include tm-light(false) {
    --active: #{color($color, 6)};
    --border: #{color($color, 4)};
  }

  @include tm-dark(false) {
    --active: #{color($color, 4)};
    --border: #{color($color, 6)};
  }
}

x-sname {
  display: inline;
  text-transform: uppercase;
  font-weight: 500;
  padding: 0.125em 0.25em;
  font-size: em(13, 16);

  @include fgcolor(primary, 5);
}

x-vcoin,
.x-vcoin {
  display: inline-flex;
  gap: 0.1em;
  align-items: center;
  font-weight: 500;
  @include fgcolor(warning);
}

x-n {
  background-position: bottom bottom;

  // unknown
  &[d='0'] {
    @include cv-node(success);
  }

  // primary
  &[d='1'] {
    @include cv-node(warning);
  }

  // regular
  &[d='2'] {
    @include cv-node(primary);
  }

  // hintpri
  &[d='3'] {
    @include cv-node(harmful);
  }

  // hintreg
  &[d='4'] {
    @include cv-node(teal);
  }

  // autogen
  &[d='5'] {
    @include cv-node(purple);
  }

  // essence + fixture
  &[d='6'] {
    @include cv-node(neutral);
  }
}

x-g {
  --color: #{color(neutral, 5, 8)};

  $colors: (red, orange, yellow, green, blue, indigo, purple);

  @for $index from 1 through 7 {
    $color: nth($colors, $index);
    &[l='#{$index}'] {
      --color: #{color($color, 5, 8)};
    }
  }

  &:before,
  &:after {
    font-size: smaller;
    vertical-align: top;
    color: var(--color);
  }

  &:before {
    content: '(';
  }

  &:after {
    content: ')';
  }
}

x-c {
  @include cv-node(gray);
  color: var(--active);
  font-size: 0.9em;
  text-transform: uppercase;

  &:hover {
    border-bottom: 1px solid var(--border);
  }

  &:after {
    padding: 0 0.25rem;
    @include ftsize(xs);
  }
}

x-z {
  font-family: Roboto, Noto Sans CJK, 'Microsoft Yahei', STXihei, sans-serif;
  @include cv-node(gray);
  @include cv-node(primary);

  &:hover,
  &.focus {
    color: var(--active);
  }
}

x-n {
  .cdata:hover &,
  .cdata.focus &,
  &:hover {
    border-bottom: 1px solid var(--border);
    background: none;
  }

  &:hover,
  &.hover {
    color: var(--active);
  }

  &:after {
    padding: 0 0.25rem;
  }
}
