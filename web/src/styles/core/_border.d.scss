// configs

$-border-width-df: 1px !default;
$-border-style-df: solid !default;
$-border-color-df: neutral !default;
$-border-shade-df: 3 !default;

// functions

@function border-props($sides: all, $type: null) {
  @if $sides == all or $sides == null {
    @return join-props(border, $type);
  }

  $props: ();

  @each $side in $m-sides {
    @if match-side($side, $sides) {
      $props: append($props, join-props(border, $side, $type));
    }
  }

  @return $props;
}

// colors

@mixin bdcolor(
  $color: $-border-color-df,
  $shade: $-border-shade-df,
  $sides: all
) {
  $props: border-props($sides, color);
  @include bp-all($props, color($color, $shade));
}

// styles

@mixin bdstyle($style: $-border-style-df, $sides: all) {
  $props: border-props($sides, style);
  @include bp-all($props, $style);
}

// widths

@mixin bdwidth($width: $-border-width-df, $sides: all) {
  $props: border-props($sides, width);
  @include bp-all($props, $width);
}

// borders

@mixin border(
  $width: $-border-width-df,
  $color: $-border-color-df,
  $shade: $-border-shade-df,
  $style: $-border-style-df,
  $sides: all
) {
  $props: border-props($sides);
  $value: $width $style color($color, $shade);
  @include bp-all($props, $value);
}
