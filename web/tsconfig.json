{
  "compilerOptions": {
    "moduleResolution": "node",
    "module": "es2020",
    "lib": ["es2020", "dom", "dom.iterable"],
    "target": "es2020",
    /**
			svelte-preprocess cannot figure out whether you have a value or a type, so tell TypeScript
			to enforce using \`import type\` instead of \`import\` for Types.
		*/
    "importsNotUsedAsValues": "error",
    /**
			TypeScript doesn't know about import usages in the template because it only sees the
			script of a Svelte file. Therefore preserve all value imports. Requires TS 4.5 or higher.
		*/
    "preserveValueImports": true,
    "isolatedModules": true,
    "resolveJsonModule": true,
    /**
			To have warnings/errors of the Svelte compiler at the correct position,
			enable source maps by default.
		*/
    "sourceMap": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "baseUrl": ".",
    "allowJs": true,
    "checkJs": true,
    "outDir": "./dist",
    "paths": {
      "*": ["./src/types/*.d.ts"],
      "$lib": ["./src/lib"],
      "$lib/*": ["./src/lib/*"],
      "$gui": ["./src/gui"],
      "$gui/*": ["./src/gui/*"],
      "$utils": ["./src/utils"],
      "$utils/*": ["./src/utils/*"]
    }
  },
  "extends": "./.svelte-kit/tsconfig.json",
  "files": ["src/types/shared.d.ts"],
  "include": ["src/**/*.d.ts", "src/**/*.js", "src/**/*.ts", "src/**/*.svelte"]
}
